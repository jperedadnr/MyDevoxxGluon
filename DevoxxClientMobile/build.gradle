buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
        }
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:2.0.16'
    }
}

apply plugin: 'org.javafxports.jfxmobile'

repositories {
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

mainClassName = 'com.devoxx.DevoxxApplication'
//preloaderClassName = 'com.devoxx.DevoxxPreloader'

// For desktop (for mobile check java.custom.properties)
applicationDefaultJvmArgs = [
        "-Djavafx.pulseLogger=false",
        "-Denable.logging=true",
        "-Dfile.encoding=UTF-8"
]

dependencies {
    compile project(':DevoxxClientCommon')
    compile 'com.gluonhq:glisten-afterburner:1.3.0-jdk9'
    compile 'com.gluonhq:charm-cloudlink-client:4.4.0-jdk9'
    compile 'com.gluonhq:charm-glisten-connect-view:4.4.0-jdk9'
    compile 'com.gluonhq:maps:1.0.1'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'

}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jfxmobile {
    downConfig {
        version charm_down_version
        plugins 'barcode-scan', 'browser', 'cache', 'connectivity', 'device', 'display', 'lifecycle',
                'local-notifications', 'push-notifications', 'runtime-args', 'settings', 'share', 'statusbar', 'storage' /*, 'video' */
    }
    android {
        manifest = 'src/android/AndroidManifest.xml'
        signingConfig {
            storeFile project.hasProperty('DEVOXX_APK_SIGN_KEYSTORE') ? file(DEVOXX_APK_SIGN_KEYSTORE) : null
            storePassword project.hasProperty('DEVOXX_APK_SIGN_STOREPASSWORD') ? DEVOXX_APK_SIGN_STOREPASSWORD : ''
            keyAlias project.hasProperty('DEVOXX_APK_SIGN_KEYALIAS') ? DEVOXX_APK_SIGN_KEYALIAS : ''
            keyPassword project.hasProperty('DEVOXX_APK_SIGN_KEYPASSWORD') ? DEVOXX_APK_SIGN_KEYPASSWORD : ''
        }
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.devoxx.**.*',
                'com.gluonhq.**.*',
                'javax.xml.stream.*.',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'org.glassfish.json.**.*'
        ]
    }
}

task printf() << {
    configurations.runtime.each {
        println it
        (it.name.endsWith('jar') ? zipTree(it) : fileTree(it)).each {
            println "\t$it"
        }
    }
}
